install.packages("IRkernel")
IRkernel::installspec()
IRkernel::installspec()
IRkernel::installspec()
extra<- read.table("SparrowSize.txt", header=T, sep="\t")
extra<- read.table("SparrowSize.txt", header=T, sep="\t")
extra<- read.table("..SparrowSize.csv", header=T, sep="\t")
extra<- read.table("./SparrowSize.csv", header=T, sep="\t")
pwd
getwd()
setwd("C:/Users/yxy/Github_desktop/CMEECourseWork")
setwd("../week04/Code")
setwd("C:/Users/yxy/Github_desktop/CMEECourseWork/week04/Code")
print(extra)
print("sssssssssssssssssssss")
setwd("../Data")
getwd()
"\t")
getwd()
setwd("../Code/")
"\t")
"\t")
setwd("../Code")
"\t")
"\t")
content <- read.table("SparrowSize.txt", header=T, sep="\t")
print("sssssssssssssssssssss")
content <- read.table("SparrowSize.txt", header=T, sep="\t")   #
print("content: ", content)
print("sssssssssssssssssssss")
content <- read.table("SparrowSize.txt", header=T, sep="\t")   #
source("C:/Users/yxy/Github_desktop/CMEECourseWork/week04/Code/HO2_23Oct.R", echo=TRUE)
print("sssssssssssssssssssss")
content <- read.table("SparrowSize.txt", header=T, sep="\t")   #
print("content: ", content)
print("ssss  start  sssssssss")
content <- read.table("SparrowSize.txt", header=T, sep="\t")   #
print("content: ", content)
source("C:/Users/yxy/Github_desktop/CMEECourseWork/week04/Code/HO2_23Oct.R", echo=TRUE)
source("C:/Users/yxy/Github_desktop/CMEECourseWork/week04/Code/HO2_23Oct.R", echo=TRUE)
setwd("../../week03/Code")
getwd()
source("trees_read_csv.r", echo = TRUE)
source("trees_read_csv.r", echo = TRUE)
source("trees_read_csv.r", echo = TRUE)
getwd()
setwd("../../week04/Code")
getwd()
content <- read.table("SparrowSize.txt", header=T, sep="\t")   #
"
print("content", content)
source("C:/Users/yxy/Github_desktop/CMEECourseWork/week04/Code/HO2_23Oct.R", echo=TRUE)
?mean
a <- ls(pattern = "My*") # Check that MyData has appeared
print(a)
a <- ls(pattern = "My*") # Check that MyData has appeared
print(a)
a <- ls(pattern = "My*") # Check that MyData has appeared
print(a)
dir("../results/") # Check if it worked
print(a)
MyData <- read.csv("../Data/trees.csv", header = TRUE) # import with headers
getwd()
setwd("../../week03/Code")
MyData <- read.csv("../Data/trees.csv", header = TRUE) # import with headers
MyData <- read.csv("../Data/trees.csv", header = TRUE) # import with headers
write.csv(MyData, "../Results/MyData.csv") #write it out as a new file
write.table(MyData[1,], file = "../Results/MyData.csv",append=TRUE) # Append to it
write.table(MyData[1,], file = "../Results/MyData.csv",append=TRUE) # Append to it
write.table(MyData[1,], file = "../Results/MyData.csv",append=TRUE) # Append to it
write.csv(MyData, "../Results/MyData.csv", row.names=TRUE) # write row names
write.table(MyData[1,], file = "../Results/MyData.csv",append=TRUE) # Append to it
write.table(MyData[1,], file = "../Results/MyData.csv",append=TRUE) # Append to it
write.csv(MyData, "../Results/MyData.csv", row.names=TRUE) # write row names
source("basic_io.R")
getwd()
source("basic_io.R")
view(MyData)
?matrix
?runif
load("C:/Users/yxy/Github_desktop/CMEECourseWork/week03/Data/GPDDFiltered.RData")
?tan
q()
# https://mhasoba.github.io/TheMulQuaBio/notebooks/08-Data_R.html#on-to-data-exploration
a <- read.table("../Data/Results.txt", header = TRUE)
head(a)
a$ymin <- rep(0, dim(a)[1]) # append a column of zeros
# Print the first linerange
p <- ggplot(a)
# https://mhasoba.github.io/TheMulQuaBio/notebooks/08-Data_R.html#on-to-data-exploration
library(ggplot2)
a <- read.table("../Data/Results.txt", header = TRUE)
head(a)
a$ymin <- rep(0, dim(a)[1]) # append a column of zeros
# Print the first linerange
p <- ggplot(a)
p <- p + geom_linerange(data = a, aes(
x = x,
ymin = ymin,
ymax = y1,
size = (0.5)
),
colour = "#E69F00",
alpha = 1/2, show.legend = FALSE)
# Print the second linerange
p <- p + geom_linerange(data = a, aes(
x = x,
ymin = ymin,
ymax = y2,
size = (0.5)
),
colour = "#56B4E9",
alpha = 1/2, show.legend = FALSE)
# Print the third linerange:
p <- p + geom_linerange(data = a, aes(
x = x,
ymin = ymin,
ymax = y3,
size = (0.5)
),
colour = "#D55E00",
alpha = 1/2, show.legend = FALSE)
# Annotate the plot with labels:
p <- p + geom_text(data = a, aes(x = x, y = -500, label = Label))
# now set the axis labels, remove the legend, and prepare for bw printing
p <- p + scale_x_continuous("My x axis",
breaks = seq(3, 5, by = 0.05)) +
scale_y_continuous("My y axis") +
theme_bw() +
theme(legend.position = "none")
p
